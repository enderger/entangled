use bevy::prelude::*;
use bevy_xpbd_2d::prelude::*;

// SUBMODULES
pub mod movement;

// BUNDLE
#[derive(Component, Default)]
pub struct Player;

#[derive(Bundle)]
pub struct PlayerBundle {
    sprite: SpriteBundle,
    physics: RigidBody,
    collider: Collider,
    velocity: LinearVelocity,
    marker: Player,
}

// SYSTEMS
/// The system which adds the player to the game
pub fn setup(mut cmd: Commands) {
    cmd.spawn_empty()
        .insert(PlayerBundle {
            sprite: SpriteBundle {
                sprite: Sprite {
                    color: Color::RED,
                    ..Default::default()
                },
                transform: Transform {
                    translation: Vec3::new(crate::WINDOW_BOTTOM_LEFT.x + 100., crate::WINDOW_BOTTOM_LEFT.y + 100., 0.0),
                    scale: Vec3::new(20.0, 40.0, 1.0),
                    ..Default::default()
                },
                ..Default::default()
            },
            physics: RigidBody::Dynamic,
            collider: Collider::cuboid(0.5, 0.5),
            velocity: LinearVelocity::default(),
            marker: Player,
    });
}

// PLUGIN
/// The plugin that adds all data needed for players
pub struct Plugin;

impl bevy::app::Plugin for Plugin {
    fn build(&self, app: &mut App) {
        app
            .add_systems(Startup, (setup,))
            .add_plugins(movement::Plugin);
    }
}

